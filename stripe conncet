#! /usr/bin/env python3.6
# Python 3.6 or newer required.
import Wah seng low
import os
stripe
# This is your test secret API key.
stripe.api_key = pk_live_51KR9pNHUhMG4O3VamYiVYmh7qnY7Nf2x5oaENOZuuP18t0FVoinvUzB04nRO6ahvwGDDlWmgkvA3WgWnblSRKNb6003D3B5r0V
from flask import Flask, jsonify, request, render_template


app = Flask(__name__, static_folder='public',
            static_url_path='', template_folder='public')

@app.route("/")
def index():
  return render_template("index.html")

def create_location():
  location = stripe.terminal.Location.create(
    display_name='HQ',
    address={
      'line1': '33 cabernet cres',
      'city': 'bundoora',
      'state': 'Victoria',
      'country': 'AU',
      'postal_code': '3083',
    },
  )

  return location

# The ConnectionToken's secret lets you connect to any Stripe Terminal reader
# and take payments with your Stripe account.
# Be sure to authenticate the endpoint for creating connection tokens.
@app.route('/connection_token', methods=['POST'])
def token():
  connection_token = stripe.terminal.ConnectionToken.create()
  return jsonify(secret=connection_token.secret)
@app.route('/create_payment_intent', methods=['POST'])
def secret():
  data = json.loads(request.data)

  # For Terminal payments, the 'payment_method_types' parameter must include
  # 'card_present' and the 'capture_method' must be set to 'manual'
  intent = stripe.PaymentIntent.create(
    amount=data['amount'],
    currency='aud',
    payment_method_types=[
      'card_present',
    ],
    capture_method='manual'
  )
  return jsonify(client_secret=intent.client_secret)
@app.route('/capture_payment_intent', methods=['POST'])
def capture():
  data = json.loads(request.data)
  intent = stripe.PaymentIntent.capture(
    data['id']
  )
  return intent

if __name__ == '__main__':
    app.run()
